import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from "../styles/Home.module.css";
import Header from "../components/header";
import { useMoralis, useWeb3Contract } from "react-moralis";
import { useEffect, useState } from "react"
import { contractAddresses, abi } from "../constants"
import { useNotification } from "web3uikit"
import { ethers } from "ethers"

const supportedChains = ["31337", "5"];
export default function Home() {
  const contractAddress = '0xE1Ef329e921F4D5b7DCbDc52C01e5324D76C6559';
  const { isWeb3Enabled, chainId } = useMoralis();
  // const moralis=new Moralis();

  const {
    runContractFunction: admin,
    isLoading,
    isFetching,
  } = useWeb3Contract({
    abi: abi,
    contractAddress: contractAddress,
    functionName: "admin",
    params: {},
  })
  async function getAdminAndProviderAddresses() {
    // Another way we could make a contract call:
    // const options = { abi, contractAddress: raffleAddress }
    // const fee = await Moralis.executeFunction({
    //     functionName: "getEntranceFee",
    //     ...options,
    // })
    const adminAddress = (await admin()).toString()
    // const numPlayersFromCall = (await getPlayersNumber()).toString()
    // const recentWinnerFromCall = await getRecentWinner()
    //cont setEntranceFee(entranceFeeFromCall)
    // setNumberOfPlayers(numPlayersFromCall)
    // setRecentWinner(recentWinnerFromCall)
    console.log(adminAddress)
  }

  useEffect(() => {
    if (isWeb3Enabled) {
      getAdminAndProviderAddresses()
    }
  }, [isWeb3Enabled])
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      {isWeb3Enabled ? (
        <div>
          {supportedChains.includes(parseInt(chainId).toString()) ? (
            <div className="flex flex-row">
              {/* <LotteryEntrance className="p-8" /> */}
            </div>
          ) : (
            <div>{`Please switch to a supported chainId. The supported Chain Ids are: ${supportedChains}`}</div>
          )}
        </div>
      ) : (
        <div>Please connect to a Wallet</div>
      )}
    </div>
  )
}
